# -*- coding: utf-8 -*-
"""correlacao_regressao 09_10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZoeqLL-rlGY8y86tqltOjnYahzjoMgjm

Correlação Regressão Simples/Multivariada

Desafio Final

Sugestões de bibliotecas para serem utilizadas:
Pandas, NumPy, Seaborn, Matplotlib, Statsmodels, Scipy

Considerando a base de dados kc_house_data.csv responda as questões de 1
a 6 abaixo:

1. Codifique e exiba a matriz de correlação entre as variáveis numéricas.
Além disso, qual é a correlação entre o preço price e o número de
quartos bedrooms? Existe alguma diferença na correlação quando
consideramos apenas casas com uma área total sqft_living superior a
2000 pés quadrados?

a. Codifique e exiba a matriz de correlação entre as variáveis numéricas:
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Montar o Google Drive
drive.mount('/content/drive', force_remount=True)

# 1. Carregar os dados
file_path = '/content/drive/MyDrive/correlacao_regressao/kc_house_data.csv'

# Calcular a matriz de correlação
correlation_matrix = df_ab.corr()

# Configurar o tamanho do gráfico
plt.figure(figsize=(16, 12))

# Exibir a matriz de correlação usando um mapa de calor
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap='coolwarm', square=True,
            linewidths=.5, cbar_kws={"shrink": .8})

plt.title('Matriz de Correlação entre Variáveis Numéricas', fontsize=18)
plt.xticks(rotation=45, fontsize=12)  # Rotacionar os rótulos do eixo X
plt.yticks(rotation=0, fontsize=12)    # Rotacionar os rótulos do eixo Y
plt.tight_layout()                      # Ajustar o layout
plt.show()

"""b. Além disso, qual é a correlação entre o preço price e o número de quartos bedrooms?"""

# Selecionar apenas as colunas de interesse
columns_of_interest = df_ab[['price', 'bedrooms', 'bathrooms']]

# Calcular a matriz de correlação
correlation_matrix = columns_of_interest.corr()

# Exibir a matriz de correlação
print(correlation_matrix)

"""c. Existe alguma diferença na correlação quando consideramos apenas casas com uma área total sqft_living superior a 2000 pés quadrados?"""

#Correlação entre price e bedrooms
correlation_price_bedrooms = df_ab['price'].corr(df_ab['bedrooms'])
print(f'Correlação entre preço e número de quartos: {correlation_price_bedrooms}')

#Filtrar casas com sqft_living > 2000 e calcular a correlação novamente
filtered_houses = df_ab[df_ab['sqft_living'] > 2000]
correlation_price_bedrooms_filtered = filtered_houses['price'].corr(filtered_houses['bedrooms'])
print(f'Correlação entre preço e número de quartos para casas com sqft_living > 2000: {correlation_price_bedrooms_filtered}')

# Agrupar por 'bedrooms', 'bathrooms' e calcular estatísticas descritivas
grouped_stats = df_ab.groupby(['bedrooms', 'bathrooms']).agg({
    'price': ['mean', 'median', 'min', 'max', 'std'],
    'sqft_living': ['mean', 'median', 'min', 'max', 'std'],
    'sqft_lot': ['mean', 'median', 'min', 'max', 'std'],
    # Adicione outras colunas que deseja incluir nas estatísticas descritivas
})

# Exibir as estatísticas agrupadas
print(grouped_stats)

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Vamos assumir que df_ab é o seu DataFrame já carregado

# 1. Gráficos de Dispersão
plt.figure(figsize=(15, 5))

# Gráfico 1: Preço vs. Número de Quartos
plt.subplot(1, 3, 1)
sns.scatterplot(x='bedrooms', y='price', data=df_ab)
plt.title('Preço vs. Número de Quartos')
plt.xlabel('Número de Quartos')
plt.ylabel('Preço')

# Gráfico 2: Preço vs. Número de Banheiros
plt.subplot(1, 3, 2)
sns.scatterplot(x='bathrooms', y='price', data=df_ab)
plt.title('Preço vs. Número de Banheiros')
plt.xlabel('Número de Banheiros')
plt.ylabel('Preço')

# Gráfico 3: Número de Quartos vs. Número de Banheiros
plt.subplot(1, 3, 3)
sns.scatterplot(x='bedrooms', y='bathrooms', data=df_ab)
plt.title('Número de Quartos vs. Número de Banheiros')
plt.xlabel('Número de Quartos')
plt.ylabel('Número de Banheiros')

plt.tight_layout()
plt.show()

# 2. Matriz de Correlação
# Selecionar apenas as colunas de interesse
columns_of_interest = df_ab[['price', 'bedrooms', 'bathrooms']]

# Calcular a matriz de correlação
correlation_matrix = columns_of_interest.corr()

# Gráfico Heatmap da Matriz de Correlação
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap='coolwarm', square=True)
plt.title('Matriz de Correlação')
plt.show()

# 3. Estatísticas Descritivas
# Agrupar por 'bedrooms' e calcular estatísticas descritivas para 'price', 'bedrooms', e 'bathrooms'
grouped_stats = df_ab.groupby('bedrooms').agg({
    'price': ['mean', 'std', 'min', 'max'],         # Estatísticas de preço
    'bedrooms': ['count', 'mean', 'std', 'min', 'max'],  # Estatísticas de número de quartos
    'bathrooms': ['count', 'mean', 'std', 'min', 'max']  # Estatísticas de banheiros
})

# Exibir as estatísticas agrupadas
print("Estatísticas Descritivas por Número de Quartos:")
print(grouped_stats)

"""2. Existe alguma correlação entre o preço price e a área total da casa
sqft_living, considerando apenas casas com pelo menos dois
banheiros bathrooms?
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Supondo que você já tenha carregado o DataFrame df_ab

# Filtrar casas com pelo menos dois banheiros e pelo menos dois quartos
filtered_houses = df_ab[(df_ab['bathrooms'] >= 2) & (df_ab['bedrooms'] >= 2)]

# Calcular a correlação entre preço e área total da casa
correlation_price_sqft = filtered_houses['price'].corr(filtered_houses['sqft_living'])
print(f'Correlação entre preço e área total da casa para casas com pelo menos dois banheiros e dois quartos: {correlation_price_sqft}\n')

# Criar um gráfico de dispersão para visualizar a correlação
plt.figure(figsize=(10, 6))
sns.scatterplot(x='sqft_living', y='price', hue='bathrooms', data=filtered_houses, palette='viridis', alpha=0.6)
plt.title('Preço vs. Área Total da Casa (sqft_living) com Pelo Menos 2 Banheiros e 2 Quartos')
plt.xlabel('Área Total da Casa (sqft_living)')
plt.ylabel('Preço')
plt.legend(title='Número de Banheiros')
plt.show()

# Estatísticas descritivas para casas filtradas
descriptive_stats = filtered_houses[['price', 'sqft_living', 'bathrooms', 'bedrooms']].describe()
print(descriptive_stats)

"""A correlação de 0.7068 indica uma forte relação positiva entre o preço e a área total da casa. Isso significa que existe uma correlação significativa entre o preço e a área total das casas, sugerindo que casas maiores tendem a ter preços mais altos. Essa relação positiva sugere que, em geral, conforme a área total da casa aumenta, o preço também tende a aumentar.

3. Como a quantidade de banheiros bathrooms influencia na correlação
entre a área total da casa sqft_living e o preço price?
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Filtrar casas sem restrições de banheiros e quartos
filtered_houses = df_ab

# Criar um dicionário para armazenar correlações
correlation_results = {}

# Calcular a correlação entre preço e sqft_living para diferentes combinações de banheiros e quartos
for num_bathrooms in filtered_houses['bathrooms'].unique():
    for num_bedrooms in filtered_houses['bedrooms'].unique():
        subset = filtered_houses[(filtered_houses['bathrooms'] == num_bathrooms) &
                                 (filtered_houses['bedrooms'] == num_bedrooms)]

        if not subset.empty:
            correlation = subset['price'].corr(subset['sqft_living'])
            correlation_results[(num_bedrooms, num_bathrooms)] = correlation

# Criar um DataFrame para visualizar as correlações
correlation_df = pd.DataFrame.from_dict(correlation_results, orient='index', columns=['Correlação'])
correlation_df.reset_index(inplace=True)
correlation_df.columns = ['(Quartos, Banheiros)', 'Correlação']

# Criar um gráfico de barras
plt.figure(figsize=(20, 10))  # Aumentar ainda mais o tamanho da figura
sns.barplot(x=correlation_df['(Quartos, Banheiros)'].astype(str), y=correlation_df['Correlação'], palette='viridis')
plt.title('Influência de Bedrooms e Bathrooms na Correlação entre Preço e Área Total', fontsize=18)
plt.xlabel('(Quartos, Banheiros)', fontsize=14)
plt.ylabel('Correlação entre Preço e Área Total', fontsize=14)
plt.xticks(rotation=90, fontsize=12)  # Rotação de 90 graus
plt.tight_layout()  # Ajusta o layout

plt.show()

# Calcular a média das correlações
mean_correlation = correlation_df['Correlação'].mean()

# Imprimir a média fora do gráfico
print(f'Média das Correlações: {mean_correlation:.2f}')

"""A média de correlação de 0.41 sugere que a quantidade de banheiros e quartos tem uma influência positiva e moderada na relação entre a área total e o preço das casas. Isso significa que, embora a área total seja um fator importante, a valorização adicional de ter mais quartos e banheiros também desempenha um papel relevante na definição do preço.

4. Qual é a relação entre a condição da casa condition e o preço price,
considerando apenas casas com uma área total sqft_living superior a
3000 pés quadrados?
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Filtrar casas com sqft_living superior a 3000
filtered_houses = df_ab[df_ab['sqft_living'] > 3000]

# Calcular a média do preço por condição
mean_price_by_condition = filtered_houses.groupby('condition')['price'].mean().reset_index()

# Criar um gráfico de barras
plt.figure(figsize=(10, 6))
sns.barplot(x='condition', y='price', data=mean_price_by_condition, palette='viridis')
plt.title('Média do Preço por Condição da Casa (sqft_living > 3000)', fontsize=16)
plt.xlabel('Condição da Casa', fontsize=14)
plt.ylabel('Preço Médio', fontsize=14)
plt.xticks(rotation=0, fontsize=12)

# Exibir a média dos preços
for index, row in mean_price_by_condition.iterrows():
    plt.text(row['condition'], row['price'] + 20000, f'${row["price"]:,.0f}', color='black', ha='center')

plt.show()

# Imprimir a média de preços por condição
print("Média do preço por condição da casa (sqft_living > 3000):")
print(mean_price_by_condition)

"""5. Existe alguma correlação entre a localização geográfica lat e long e o
preço price para casas com pelo menos três quartos bedrooms?
"""

import pandas as pd

# Supondo que df_ab seja seu DataFrame
# Filtrar casas com pelo menos 3 quartos
filtered_houses = df_ab[df_ab['bedrooms'] >= 3]

# Calcular a correlação entre latitude, longitude e preço
correlation_matrix = filtered_houses[['lat', 'long', 'price']].corr()

# Imprimir a matriz de correlação
print("Matriz de Correlação:")
print(correlation_matrix)

# Análise dos resultados
lat_price_corr = correlation_matrix.loc['lat', 'price']
long_price_corr = correlation_matrix.loc['long', 'price']

print(f"\nCorrelação entre Latitude e Preço: {lat_price_corr:.2f}")
print(f"Correlação entre Longitude e Preço: {long_price_corr:.2f}")

if lat_price_corr > 0:
    print("Há uma correlação positiva entre a localização (latitude) e o preço das casas.")
elif lat_price_corr < 0:
    print("Há uma correlação negativa entre a localização (latitude) e o preço das casas.")
else:
    print("Não há correlação entre a localização (latitude) e o preço das casas.")

if long_price_corr > 0:
    print("Há uma correlação positiva entre a localização (longitude) e o preço das casas.")
elif long_price_corr < 0:
    print("Há uma correlação negativa entre a localização (longitude) e o preço das casas.")
else:
    print("Não há correlação entre a localização (longitude) e o preço das casas.")

"""6. Calcule a correlação entre uma variável categórica(waterfront) e uma
variável numérica(price) usando ANOVA.
"""

import pandas as pd
import statsmodels.api as sm
from statsmodels.formula.api import ols

# Supondo que df_ab seja seu DataFrame já carregado
# Verifique se a variável 'waterfront' é categórica
df_ab['waterfront'] = df_ab['waterfront'].astype('category')

# Definir o modelo ANOVA
model = ols('price ~ C(waterfront)', data=df_ab).fit()

# Realizar ANOVA
anova_table = sm.stats.anova_lm(model, typ=2)

# Imprimir a tabela ANOVA
print("Tabela ANOVA:")
print(anova_table)

# Verificar o p-valor
p_value = anova_table['PR(>F)'][0]
alpha = 0.05  # nível de significância

# Linha em branco para separar a tabela ANOVA da explicação
print("\n")

# Explicação sobre o p-valor
if p_value < alpha:
    print(f"O p-valor é {p_value:.4f}, que é menor que {alpha}. Portanto, rejeitamos a hipótese nula e concluímos que há uma diferença significativa nos preços entre as casas com e sem vista para a água.")
else:
    print(f"O p-valor é {p_value:.4f}, que é maior que {alpha}. Portanto, não rejeitamos a hipótese nula e concluímos que não há diferença significativa nos preços entre as casas com e sem vista para a água.")

"""O p-valor é 0.0000, que é menor que 0.05. Portanto, rejeitamos a hipótese nula e concluímos que há uma diferença significativa nos preços entre as casas com e sem vista para a água.

Considerando a base de dados car_price.csv responda as questões de 7 a 11
abaixo:

7. Codifique e exiba a Matriz de correlação para as variáveis numéricas e
dê exemplos de correlações positivas, negativas e neutras.
"""



"""8. Codifique e exiba Gráficos de Dispersão para cada uma das variáveis
numéricas em relação à variável de interesse Price.
"""



"""9. Crie um modelo de Regressão Linear Simples, exiba a Tabela de
Regressão e exiba o plot da Reta Estimada.
"""



"""10. Codifique e exiba o gráfico dos resíduos do modelo de Regressão
Simples.
"""



"""11. Crie um modelo de Regressão Multivariada, exiba a Tabela de Regressão
e exiba o gráfico dos resíduos do modelo.
"""

